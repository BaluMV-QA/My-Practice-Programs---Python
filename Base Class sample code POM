from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from testbase.framework.utilities.customLogger import LogGen

""""This class is the parent of all pages"""
""""it contains all the generic methods and utilities for all the page"""


class BasePage:
    logger = LogGen.loggen()

    def __init__(self, driver):
        self.driver = driver

    def get_element(self, by_locator):
        return WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator))

    def do_click(self, by_locator):
        try:
            self.get_element(by_locator).click()
            self.logger.info(f'Clicked on element {by_locator}')
        except Exception:
            message = f"Clicking on element {by_locator} failed"
            self.logger.exception(message)
            raise Exception(message)

    def do_send_keys(self, by_locator, text):
        try:
            self.get_element(by_locator).send_keys(text)
            self.logger.info(f'Typed {text} in element {by_locator}')
        except Exception:
            message = f"Typing in element {by_locator} failed"
            self.logger.exception(message)
            raise Exception(message)

    def is_visible(self, by_locator):
        try:
            element = self.get_element(by_locator)
            return bool(element)
        except Exception:
            message = f"Element {by_locator} was not found"
            self.logger.exception(message)
            raise Exception(message)

    def get_title(self):
        self.logger.info(f'Page title is "{self.driver.title}"')
        get_title = self.driver.title
        return get_title

    def get_element_text(self, by_locator):
        element = self.get_element(by_locator).text
        self.logger.info(f'text present is {element}')
        return element
